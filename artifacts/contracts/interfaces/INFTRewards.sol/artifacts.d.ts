// This file was autogenerated by Hardhat, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable
// biome-ignore format: see above

export interface INFTRewards$Type {
  readonly _format: "hh3-artifact-1";
  readonly contractName: "INFTRewards";
  readonly sourceName: "contracts/interfaces/INFTRewards.sol";
  readonly abi: [{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"enum INFTRewards.RewardTier","name":"tier","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"paymentsCount","type":"uint256"}],"name":"NFTMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"enum INFTRewards.RewardTier","name":"tier","type":"uint8"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"enum INFTRewards.RewardTier","name":"oldTier","type":"uint8"},{"indexed":false,"internalType":"enum INFTRewards.RewardTier","name":"newTier","type":"uint8"}],"name":"TierUpgraded","type":"event"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"claimReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"getNFTDetails","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"enum INFTRewards.RewardTier","name":"tier","type":"uint8"},{"internalType":"uint256","name":"paymentsCount","type":"uint256"},{"internalType":"uint256","name":"totalPaid","type":"uint256"},{"internalType":"uint256","name":"mintDate","type":"uint256"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct INFTRewards.RewardNFT","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_paymentsCount","type":"uint256"},{"internalType":"uint256","name":"_totalPaid","type":"uint256"}],"name":"getRewardTier","outputs":[{"internalType":"enum INFTRewards.RewardTier","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserNFTs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"isEligibleForReward","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_paymentsCount","type":"uint256"},{"internalType":"uint256","name":"_totalPaid","type":"uint256"}],"name":"mintRewardNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"upgradeNFTTier","outputs":[],"stateMutability":"nonpayable","type":"function"}];
  readonly bytecode: "0x";
  readonly deployedBytecode: "0x";
  readonly linkReferences: {};
  readonly deployedLinkReferences: {};
  readonly immutableReferences: {};
  readonly inputSourceName: "project/contracts/interfaces/INFTRewards.sol";
  readonly buildInfoId: "solc-0_8_19-8d5505436d98f456ce051f3853259a786d1b64f2";
};

import "hardhat/types/artifacts";
declare module "hardhat/types/artifacts" {
  interface ArtifactMap {
    ["INFTRewards"]: INFTRewards$Type;
    ["contracts/interfaces/INFTRewards.sol:INFTRewards"]: INFTRewards$Type;
  }
}